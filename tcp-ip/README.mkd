###协议类型
###TCP
#### TCP的连接建立
    包含三次握手过程，
1. 服务器通过调用socket、bind、listen，打开相应端口的服务，准备好接受外来连接
2. 客户端调用connect主动请求建立连接,这会导致客户端TCP发送一个SYN（同步）字节，告诉服务端客户将在连接（待建立）连接中发送的数据初始序列号。通常SYN分节不携带数据，其所在的IP数据报只包含一个IP首部、一个TCP首部以及可能有的TCP选项
3. 服务器必须确认（ACK）客户端的SYN，同时也发送自己的SYN字节，包含服务器将在同一连接中发送的数据的初始序列号。服务器在单个分片发送SYN和对客户SYN的ACK
4. 客户端必须确认服务端的SYN
整个过程至少交换3个分组，所以称为TCP的三次握手
该过程可类比电话系统：socket函数等同于电话可用、bind告诉别人电话号码、listen打开电话铃声；connect函数要求知道对方号码并拨打，accept函数发生在呼叫的人应答时

#### TCP的连接终止
四个过程
1. 客户端或服务端调用close，执行主动关闭（active close），TCP发送一个FIN分节
2. 接收到这个FIN节的对端执行被动关闭（passive close），接收到FIN将会作为一个EOF（文件结束符）传递给上层应用程序
3. 一段时间后，接收到FIN的应用进程调用close关闭它的套接字，发送FIN
4. 接收到最终的FIN的原发送端确认这个FIN
所以双向都有一个FIN和一个ACK，通常需要4个分节，注意某些情况下步骤1中得FIN会随数据一起发送；步骤2和3发送的分节都出自执行被动关闭的一方，有可能被合并到一起。

Unix进程被终止时，所有打开的描述符都会被关闭，这导致仍然打开的任何TCP连接上发出一个FIN
#### 与UDP的区别
TCP提供可靠性、拥塞控制
使用UDP协议的应用程序需要自己实现可靠性和拥塞控制
TCP连接建立、和终止需要共7次交互过程，UDP避免了这些过程带来的开销
###UDP


