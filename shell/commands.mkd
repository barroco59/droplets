### cat
- 使用管道： echo "test cat" | cat 
- 同时输出管道和文件： echo "test cat" | cat - filename 
- 压缩空白行： cat -s filename  (参考 tr)
- 打印制表符为^I:  cat -T filename
- 打印行号:  cat -n filename
- 跳过空白行行号:  cat -b filename

----


### find
- find . -print    	## \n 作为文件名的分割符
- find . -print0   	## \0 作为文件名的分割符
    * find . -print 0 |xargs --null du -sh  #or
    * find . -print 0 |xargs -0 du -sh
- find . -name "\*.mkd" -print   	##regurlar express
- find . -iname "\*.mkd" -print  	##ignore case
- find .  \\( -name "\*.mkd" -o -name "\*.txt" \\) -print  	##multiple conditions
- find . -path "\*/path/\*"  	## -path 使用通配符匹配路径
- find . -regex "\*/path/\*"  	## -regex 使用正则表达式匹配路径
    * find . -regex ".\*\\(\\.py | \\.sh \\)$"
- find . ! -regex "\*/path/\*"  	## ! 否定
- find . -maxdepth 1      	## -maxdepth  注意此限制条件放前面有利于运行效率
- find . -mindepth 1      	## -mindepth
- find . -type f -print
    * f 普通文件
    * l symbol links
    * d dir
    * c char device 
    * b block device
    * s Socket
    * p FIIO
- find . -atime -7 print
    * atime 访问时间  +7 超过7天  7正好七天  -7少于七天
    * mtime 修改时间
    * ctime 变化时间
- find . -amin -7 print
    * amin 访问时间  +7 超过7分钟  7正好  -7少于
    * mmin 修改时间
    * cmin 变化时间
- find . -newer file2 print
- find . -size +2k print  	##b/c/w/k/M/G    +//-
- find . -exec du -sh {} \;   	## 注意最后的\;  
    * -exec    	## {}会被替换为匹配的路径
    * -delete
- find . -name "\*.swp" -prune 	##剪枝
    * find . \\( -name "\*.swp" -prune \) -o \\(type -f\\)

----

 ### xargs
- xargs -n number       ##max number of arguments
    * echo '1 2 \n 3 4 5\n 6 7\n 8\t 9\n' |xargs -n 3 echo
- xargs -a file         #read from file
- xargs -a file         ##read from file
    * echo '1 2 3 4'> /tmp/t.x && xargs -a /tmp/t.x -n 2 echo
- xargs -d delimeter
    * echo 'a1b1c1d1' | xargs -d 1 -n 2 echo
- xargs -0          ##terminated by a null character
    * echo '1 2 \n 3 4 5\n 6 7\n 8\t 9\n' |xargs -0n 3 echo
- xargs -p numbers          ##Run up to max-procs processes at a time; the default is 1. 0 for many
    * echo '1 2 \n 3 4 5\n 6 7\n 8\t 9\n' |xargs -n 2 -p 3 wc -c



### tr (tr [options] set1 set2 )
- tr set1 set2  #replace set1 with set2
    * echo "abcdef 1234" | tr 'a-z' 'A-Z'
    * echo "translation" | tr "a-zA-Z" "n-za-mN-ZA-M" |tr "a-zA-Z" "n-za-mN-ZA-M"
    * set : startchar - endchar
- tr -d set1  #delete all chars in set1
    * echo "123456HELLO WORLD" |tr -d '0-9'
- tr -c set1 #
    * echo "12345 abcd" |tr -dc "12\n"
- tr -s set1 #Squeeze multiple occurrences of the characters listed in the last operand (either string1 or string2) in the input into a single instance of the character.  This occurs after all deletion and translation is completed.
    * echo "123334" |tr -s "3"

### sort
- sort -c  file #check whether input is sorted; do not sort
- sort -n file  # --numeric-sort
- sort -r file  # --reverse
- sort -k, --key=POS1[,POS2]   #start a key at POS1, end it at POS2 (origin 1)
    * echo "1\tbc\n2\tac" | sort -k 2 
    * echo "1\tbc\n2\tac" | sort -k 1,2
- sort -b file  # ignore leading blanks
- sort -z file  # end lines with 0 byte, not newline
    * echo "1\n2\n3\n4"  |sort -z |xargs -0 echo

### uniq
- uniq -c file #count
- uniq -u file #uniq lines
- uniq -d file #not uniq lines

### mktemp #temporary
- mktemp -d  dirname    #Make a directory instead of a file.
- mktemp -t  {prefix}.XXXX
- mktemp -q      #Fail silently if an error occurs.

```sh
    tempfoo=`basename $0`
    TMPFILE=`mktemp -q /tmp/${tempfoo}.XXXXXX`
    if [ $? -ne 0 ]; then
        echo "$0: Can't create temp file, exiting..."
        exit 1
    fi
```


### md5sum /md5deep /crypt/gpg/base64/sha1sum


### filename/extension
- ${var%.\*}  删除右侧通配，从右到左
- ${var%%.\*}  删除右侧通配(贪婪，最长匹配），从右到左
- ${var#\*.}  删除左侧通配
- ${var##.\*}  删除左侧通配(贪婪，最长匹配）

```shell
filename="file.jile.jpg"
file=${filename%.*}  #file.jile
file=${filename%%.*} #(greedy)  file
jpg=${filename#*.}   #jpg
jpg=${filename##*.}   #(greedy) jile.jpg
```

### split  (see also cspilt)
- split -b size  # 10k,1M,1G,c,w
    + split -b 1k test
- split -l lines # lines
    + split -l 100 test
- split -a 4 #suffix length
    + split -l 100 -a 3
- splite .. prefix
    + split -l 1000 -a 3 test prefix

###paste/diff/sdiff/merge
echo -e '1\n2\n3' > t1
echo -e '4\n5\n6' > t2
paste t1 t2
paste -d+ t1 t2 |bc 
paste -sd+ t1 t2|bc


